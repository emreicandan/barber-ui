{
  "version": 3,
  "sources": ["../../../../../node_modules/angular-datatables/src/angular-datatables.directive.js", "../../../../../node_modules/angular-datatables/src/angular-datatables.module.js"],
  "sourcesContent": ["var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input, Renderer2, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nvar DataTableDirective = /** @class */function () {\n  function DataTableDirective(el, vcr, renderer) {\n    this.el = el;\n    this.vcr = vcr;\n    this.renderer = renderer;\n    /**\n     * The DataTable option you pass to configure your table.\n     */\n    this.dtOptions = {};\n  }\n  DataTableDirective.prototype.ngOnInit = function () {\n    var _this = this;\n    if (this.dtTrigger) {\n      this.dtTrigger.subscribe(function (options) {\n        _this.displayTable(options);\n      });\n    } else {\n      this.displayTable(null);\n    }\n  };\n  DataTableDirective.prototype.ngOnDestroy = function () {\n    if (this.dtTrigger) {\n      this.dtTrigger.unsubscribe();\n    }\n    if (this.dt) {\n      this.dt.destroy(true);\n    }\n  };\n  DataTableDirective.prototype.displayTable = function (dtOptions) {\n    var _this = this;\n    // assign new options if provided\n    if (dtOptions) {\n      this.dtOptions = dtOptions;\n    }\n    this.dtInstance = new Promise(function (resolve, reject) {\n      Promise.resolve(_this.dtOptions).then(function (resolvedDTOptions) {\n        // validate object\n        var isTableEmpty = Object.keys(resolvedDTOptions).length === 0 && $('tbody tr', _this.el.nativeElement).length === 0;\n        if (isTableEmpty) {\n          reject('Both the table and dtOptions cannot be empty');\n          return;\n        }\n        // Set a column unique\n        if (resolvedDTOptions.columns) {\n          resolvedDTOptions.columns.forEach(function (col) {\n            var _a;\n            if (((_a = col.id) !== null && _a !== void 0 ? _a : '').trim() === '') {\n              col.id = _this.getColumnUniqueId();\n            }\n          });\n        }\n        // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n        setTimeout(function () {\n          // Assign DT properties here\n          var options = {\n            rowCallback: function (row, data, index) {\n              if (resolvedDTOptions.columns) {\n                var columns = resolvedDTOptions.columns;\n                _this.applyNgPipeTransform(row, columns);\n                _this.applyNgRefTemplate(row, columns, data);\n              }\n              // run user specified row callback if provided.\n              if (resolvedDTOptions.rowCallback) {\n                resolvedDTOptions.rowCallback(row, data, index);\n              }\n            }\n          };\n          // merge user's config with ours\n          options = Object.assign({}, resolvedDTOptions, options);\n          _this.dt = $(_this.el.nativeElement).DataTable(options);\n          resolve(_this.dt);\n        });\n      });\n    });\n  };\n  DataTableDirective.prototype.applyNgPipeTransform = function (row, columns) {\n    // Filter columns with pipe declared\n    var colsWithPipe = columns.filter(function (x) {\n      return x.ngPipeInstance && !x.ngTemplateRef;\n    });\n    colsWithPipe.forEach(function (el) {\n      var pipe = el.ngPipeInstance;\n      var pipeArgs = el.ngPipeArgs || [];\n      // find index of column using `data` attr\n      var i = columns.filter(function (c) {\n        return c.visible !== false;\n      }).findIndex(function (e) {\n        return e.id === el.id;\n      });\n      // get <td> element which holds data using index\n      var rowFromCol = row.childNodes.item(i);\n      // Transform data with Pipe and PipeArgs\n      var rowVal = $(rowFromCol).text();\n      var rowValAfter = pipe.transform.apply(pipe, __spreadArray([rowVal], pipeArgs, false));\n      // Apply transformed string to <td>\n      $(rowFromCol).text(rowValAfter);\n    });\n  };\n  DataTableDirective.prototype.applyNgRefTemplate = function (row, columns, data) {\n    var _this = this;\n    // Filter columns using `ngTemplateRef`\n    var colsWithTemplate = columns.filter(function (x) {\n      return x.ngTemplateRef && !x.ngPipeInstance;\n    });\n    colsWithTemplate.forEach(function (el) {\n      var _a = el.ngTemplateRef,\n        ref = _a.ref,\n        context = _a.context;\n      // get <td> element which holds data using index\n      var i = columns.filter(function (c) {\n        return c.visible !== false;\n      }).findIndex(function (e) {\n        return e.id === el.id;\n      });\n      var cellFromIndex = row.childNodes.item(i);\n      // reset cell before applying transform\n      $(cellFromIndex).html('');\n      // render onto DOM\n      // finalize context to be sent to user\n      var _context = Object.assign({}, context, context === null || context === void 0 ? void 0 : context.userData, {\n        adtData: data\n      });\n      var instance = _this.vcr.createEmbeddedView(ref, _context);\n      _this.renderer.appendChild(cellFromIndex, instance.rootNodes[0]);\n    });\n  };\n  DataTableDirective.prototype.getColumnUniqueId = function () {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < 6; i++) {\n      var randomIndex = Math.floor(Math.random() * characters.length);\n      result += characters.charAt(randomIndex);\n    }\n    return result.trim();\n  };\n  DataTableDirective.ɵfac = function DataTableDirective_Factory(t) {\n    return new (t || DataTableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  DataTableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DataTableDirective,\n    selectors: [[\"\", \"datatable\", \"\"]],\n    inputs: {\n      dtOptions: \"dtOptions\",\n      dtTrigger: \"dtTrigger\"\n    }\n  });\n  return DataTableDirective;\n}();\nexport { DataTableDirective };\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[datatable]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    dtOptions: [{\n      type: Input\n    }],\n    dtTrigger: [{\n      type: Input\n    }]\n  });\n})();\n", "/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as i0 from \"@angular/core\";\nvar DataTablesModule = /** @class */function () {\n  function DataTablesModule() {}\n  DataTablesModule.forRoot = function () {\n    return {\n      ngModule: DataTablesModule\n    };\n  };\n  DataTablesModule.ɵfac = function DataTablesModule_Factory(t) {\n    return new (t || DataTablesModule)();\n  };\n  DataTablesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DataTablesModule,\n    declarations: [DataTableDirective],\n    imports: [CommonModule],\n    exports: [DataTableDirective]\n  });\n  DataTablesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return DataTablesModule;\n}();\nexport { DataTablesModule };\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTablesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [DataTableDirective],\n      exports: [DataTableDirective]\n    }]\n  }], null, null);\n})();\n"],
  "mappings": "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",
  "names": ["DataTableDirective", "DataTablesModule"]
}
